// <auto-generated />
using System;
using CarRentalapi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRentalapi.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarRentalapi.Models.Cities", b =>
                {
                    b.Property<int>("CitiesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CitiesId"));

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatesId")
                        .HasColumnType("int");

                    b.HasKey("CitiesId");

                    b.HasIndex("StatesId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CarRentalapi.Models.Countries", b =>
                {
                    b.Property<int>("CountriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountriesId"));

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountriesId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CarRentalapi.Models.Customers", b =>
                {
                    b.Property<int>("CustomersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomersId"));

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CitiesId")
                        .HasColumnType("int");

                    b.Property<int?>("CountriesId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatesId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomersId");

                    b.HasIndex("CitiesId");

                    b.HasIndex("CountriesId");

                    b.HasIndex("StatesId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CarRentalapi.Models.Drivers", b =>
                {
                    b.Property<int>("DriversId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriversId"));

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CitiesId")
                        .HasColumnType("int");

                    b.Property<int?>("CountriesId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatesId")
                        .HasColumnType("int");

                    b.HasKey("DriversId");

                    b.HasIndex("CitiesId");

                    b.HasIndex("CountriesId");

                    b.HasIndex("StatesId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("CarRentalapi.Models.EmployeeTypes", b =>
                {
                    b.Property<int>("EmployeeTypesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeTypesId"));

                    b.Property<string>("Type")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("EmployeeTypesId");

                    b.ToTable("EmployeeTypes");
                });

            modelBuilder.Entity("CarRentalapi.Models.States", b =>
                {
                    b.Property<int>("StatesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatesId"));

                    b.Property<int>("CountriesId")
                        .HasColumnType("int");

                    b.Property<int?>("CountriesId1")
                        .HasColumnType("int");

                    b.Property<string>("StatesName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatesId");

                    b.HasIndex("CountriesId");

                    b.HasIndex("CountriesId1");

                    b.ToTable("States");
                });

            modelBuilder.Entity("CarRentalapi.Models.VehicleCapacity", b =>
                {
                    b.Property<int>("VehicleCapacityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleCapacityId"));

                    b.Property<string>("Capacity")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleCapacityId");

                    b.ToTable("VehicleCapacity");
                });

            modelBuilder.Entity("CarRentalapi.Models.VehicleFuel", b =>
                {
                    b.Property<int>("VehicleFuelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleFuelId"));

                    b.Property<string>("Fuel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleFuelId");

                    b.ToTable("VehicleFuel");
                });

            modelBuilder.Entity("CarRentalapi.Models.VehicleMakes", b =>
                {
                    b.Property<int>("VehicleMakesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleMakesId"));

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("VehicleMakesId");

                    b.ToTable("VehicleMakes");
                });

            modelBuilder.Entity("CarRentalapi.Models.VehicleModels", b =>
                {
                    b.Property<int>("VehicleModelsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleModelsId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleMakesId")
                        .HasColumnType("int");

                    b.HasKey("VehicleModelsId");

                    b.HasIndex("VehicleMakesId");

                    b.ToTable("VehicleModels");
                });

            modelBuilder.Entity("CarRentalapi.Models.VehicleTypes", b =>
                {
                    b.Property<int>("VehicleTypesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleTypesId"));

                    b.Property<string>("Type")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("VehicleTypesId");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("OnlineCarRentals.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Address1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BankAccount")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("BankName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("CitiesId")
                        .HasColumnType("int");

                    b.Property<int?>("CountriesId")
                        .HasColumnType("int");

                    b.Property<string>("Customers")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DeleteStatus")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Drivers")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int?>("EmployeeTypesId")
                        .HasColumnType("int");

                    b.Property<string>("Employees")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Owners")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PAN")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Pincode")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Rentals")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("StatesId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VehicleMakes")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("VehicleModels")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Vehicles")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("CitiesId");

                    b.HasIndex("CountriesId");

                    b.HasIndex("EmailAddress")
                        .IsUnique()
                        .HasFilter("[EmailAddress] IS NOT NULL");

                    b.HasIndex("EmployeeTypesId");

                    b.HasIndex("StatesId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("OnlineCarRentals.Models.Owners", b =>
                {
                    b.Property<int>("OwnersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OwnersId"));

                    b.Property<string>("Address1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BankAccount")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("BankName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("CitiesId")
                        .HasColumnType("int");

                    b.Property<int?>("CountriesId")
                        .HasColumnType("int");

                    b.Property<string>("DeleteStatus")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PAN")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PinCode")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("StatesId")
                        .HasColumnType("int");

                    b.HasKey("OwnersId");

                    b.HasIndex("CitiesId");

                    b.HasIndex("CountriesId");

                    b.HasIndex("StatesId");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("OnlineCarRentals.Models.Rentals", b =>
                {
                    b.Property<int>("RentalsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentalsId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CustomersId")
                        .HasColumnType("int");

                    b.Property<int>("DestinationLocation")
                        .HasColumnType("int");

                    b.Property<int?>("DriversId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EndKMS")
                        .HasColumnType("int");

                    b.Property<int?>("NoOfDays")
                        .HasColumnType("int");

                    b.Property<int?>("NoOfKMS")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SourceLocation")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StartKMS")
                        .HasColumnType("int");

                    b.Property<int?>("StatesId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TransactionNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TravelPurpose")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("VehicleRate")
                        .HasColumnType("int");

                    b.Property<int>("VehiclesId")
                        .HasColumnType("int");

                    b.HasKey("RentalsId");

                    b.HasIndex("CustomersId");

                    b.HasIndex("DestinationLocation");

                    b.HasIndex("DriversId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SourceLocation");

                    b.HasIndex("StatesId");

                    b.HasIndex("VehiclesId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("OnlineCarRentals.Models.Vehicles", b =>
                {
                    b.Property<int>("VehiclesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiclesId"));

                    b.Property<int?>("AdditionalDailyRate")
                        .HasColumnType("int");

                    b.Property<int?>("AdditionalHourlyRate")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("ChaisisNumber")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("CitiesId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("CountriesId")
                        .HasColumnType("int");

                    b.Property<int>("DailyRate")
                        .HasColumnType("int");

                    b.Property<string>("DeleteStatus")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Fuel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("HourlyRate")
                        .HasColumnType("int");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<int>("OwnersId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RegistrationState")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("VehicleModelsId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("VehiclesId");

                    b.HasIndex("CitiesId");

                    b.HasIndex("CountriesId");

                    b.HasIndex("OwnersId");

                    b.HasIndex("RegistrationState");

                    b.HasIndex("VehicleModelsId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("CarRentalapi.Models.Cities", b =>
                {
                    b.HasOne("CarRentalapi.Models.States", "States")
                        .WithMany("Cities")
                        .HasForeignKey("StatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("States");
                });

            modelBuilder.Entity("CarRentalapi.Models.Customers", b =>
                {
                    b.HasOne("CarRentalapi.Models.Cities", "City")
                        .WithMany()
                        .HasForeignKey("CitiesId");

                    b.HasOne("CarRentalapi.Models.Countries", "Country")
                        .WithMany()
                        .HasForeignKey("CountriesId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CarRentalapi.Models.States", "State")
                        .WithMany()
                        .HasForeignKey("StatesId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("State");
                });

            modelBuilder.Entity("CarRentalapi.Models.Drivers", b =>
                {
                    b.HasOne("CarRentalapi.Models.Cities", "City")
                        .WithMany()
                        .HasForeignKey("CitiesId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CarRentalapi.Models.Countries", "Country")
                        .WithMany()
                        .HasForeignKey("CountriesId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CarRentalapi.Models.States", "State")
                        .WithMany()
                        .HasForeignKey("StatesId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("State");
                });

            modelBuilder.Entity("CarRentalapi.Models.States", b =>
                {
                    b.HasOne("CarRentalapi.Models.Countries", "country")
                        .WithMany()
                        .HasForeignKey("CountriesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CarRentalapi.Models.Countries", null)
                        .WithMany("States")
                        .HasForeignKey("CountriesId1");

                    b.Navigation("country");
                });

            modelBuilder.Entity("CarRentalapi.Models.VehicleModels", b =>
                {
                    b.HasOne("CarRentalapi.Models.VehicleMakes", "VehicleMakes")
                        .WithMany()
                        .HasForeignKey("VehicleMakesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VehicleMakes");
                });

            modelBuilder.Entity("OnlineCarRentals.Models.Employee", b =>
                {
                    b.HasOne("CarRentalapi.Models.Cities", "City")
                        .WithMany()
                        .HasForeignKey("CitiesId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CarRentalapi.Models.Countries", "Country")
                        .WithMany()
                        .HasForeignKey("CountriesId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CarRentalapi.Models.EmployeeTypes", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeTypesId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CarRentalapi.Models.States", "State")
                        .WithMany()
                        .HasForeignKey("StatesId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("EmployeeType");

                    b.Navigation("State");
                });

            modelBuilder.Entity("OnlineCarRentals.Models.Owners", b =>
                {
                    b.HasOne("CarRentalapi.Models.Cities", "Cities")
                        .WithMany()
                        .HasForeignKey("CitiesId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CarRentalapi.Models.Countries", "Countries")
                        .WithMany()
                        .HasForeignKey("CountriesId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CarRentalapi.Models.States", "States")
                        .WithMany()
                        .HasForeignKey("StatesId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Cities");

                    b.Navigation("Countries");

                    b.Navigation("States");
                });

            modelBuilder.Entity("OnlineCarRentals.Models.Rentals", b =>
                {
                    b.HasOne("CarRentalapi.Models.Customers", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CarRentalapi.Models.Cities", "DestinationCities")
                        .WithMany()
                        .HasForeignKey("DestinationLocation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CarRentalapi.Models.Drivers", "Drivers")
                        .WithMany()
                        .HasForeignKey("DriversId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OnlineCarRentals.Models.Employee", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CarRentalapi.Models.Cities", "SourceCities")
                        .WithMany()
                        .HasForeignKey("SourceLocation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CarRentalapi.Models.States", "States")
                        .WithMany()
                        .HasForeignKey("StatesId");

                    b.HasOne("OnlineCarRentals.Models.Vehicles", "Vehicles")
                        .WithMany()
                        .HasForeignKey("VehiclesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("DestinationCities");

                    b.Navigation("Drivers");

                    b.Navigation("Employees");

                    b.Navigation("SourceCities");

                    b.Navigation("States");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("OnlineCarRentals.Models.Vehicles", b =>
                {
                    b.HasOne("CarRentalapi.Models.Cities", "Cities")
                        .WithMany()
                        .HasForeignKey("CitiesId");

                    b.HasOne("CarRentalapi.Models.Countries", "Countries")
                        .WithMany()
                        .HasForeignKey("CountriesId");

                    b.HasOne("OnlineCarRentals.Models.Owners", "Owners")
                        .WithMany()
                        .HasForeignKey("OwnersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CarRentalapi.Models.States", "States")
                        .WithMany()
                        .HasForeignKey("RegistrationState")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CarRentalapi.Models.VehicleModels", "VehicleModels")
                        .WithMany()
                        .HasForeignKey("VehicleModelsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cities");

                    b.Navigation("Countries");

                    b.Navigation("Owners");

                    b.Navigation("States");

                    b.Navigation("VehicleModels");
                });

            modelBuilder.Entity("CarRentalapi.Models.Countries", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("CarRentalapi.Models.States", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
